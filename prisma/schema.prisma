generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String        @id @default(uuid())
  nome         String
  email        String        @unique
  despesas     Despesa[]
  funcionarios Funcionario[]
  produtos     Produto[]
  regioes      Regiao[]
  vendas       Venda[]
}

model Produto {
  id             Int             @id @default(autoincrement())
  picture        String
  NameImg        String
  nome           String
  descricao      String
  categoria      String
  precoAtual     Float
  faturamento    Float
  numVendas      Int
  usuarioId      String
  usuario        Usuario         @relation(fields: [usuarioId], references: [id])
  variacoesPreco VariacaoPreco[]
  vendas         Venda[]
}

model VariacaoPreco {
  id        Int      @id @default(autoincrement())
  produtoId Int
  data      DateTime
  preco     Float
  variacao  Float
  produto   Produto  @relation(fields: [produtoId], references: [id])
}

model Regiao {
  id          Int      @id @default(autoincrement())
  picture     String?
  nameImg     String?
  nome        String
  descricao   String
  responsavel String
  endereco    String?
  cidade      String
  usuarioId   String?
  faturamento Float
  numVendas   Int
  clientes    Int
  usuario     Usuario? @relation(fields: [usuarioId], references: [id])
  vendas      Venda[]
}

model Funcionario {
  id                Int      @id @default(autoincrement())
  picture           String?
  nome              String
  email             String
  descricao         String?
  endereco          String
  localAtuacao      String
  genero            String
  cpf               String
  dataContratacao   DateTime
  telefone          String
  formacaoAcademica String
  linkedin          String?
  github            String?
  usuarioId         String
  faturamento       Float?
  numVendas         Int?
  usuario           Usuario  @relation(fields: [usuarioId], references: [id])
  vendas            Venda[]
}

model Despesa {
  id        Int      @id @default(autoincrement())
  nome      String
  data      DateTime
  descricao String?
  tipo      String
  valor     Float
  usuarioId String?
  usuario   Usuario? @relation(fields: [usuarioId], references: [id])
}

model Venda {
  ID_venda           Int            @id @default(autoincrement())
  Data               String
  funcionarioId      Int
  valor              Float
  quantidadeProdutos Int
  comprador          String
  produtoid          Int
  regiaoId           Int
  formaPagamento     String
  usuarioId          String?
  relatorioId        Int
  dividas            VendasEmDivida @relation(fields: [ID_venda], references: [id])
  funcionario        Funcionario    @relation(fields: [funcionarioId], references: [id])
  produto            Produto        @relation(fields: [produtoid], references: [id])
  regiao             Regiao         @relation(fields: [regiaoId], references: [id])
  relatorio          Relatorio      @relation(fields: [relatorioId], references: [id])
  usuario            Usuario?       @relation(fields: [usuarioId], references: [id])
}

model Relatorio {
  id      Int     @id @default(autoincrement())
  Data    String
  idVenda Int
  Venda   Venda[]
}

model VendasEmDivida {
  id      Int     @id @default(autoincrement())
  idVenda Int
  pago    Boolean
  dividas Venda?
}
